 %% ��������ඨ��

classdef VSAS_MAIN
    
    properties
        
        screen_size; 
        window_width; 
        window_height;
        
        flag_dis_fit_init;
        flag_fit;
        flag_fit_slider_init;
        flag_guinier_init;
        flag_load_data;
        flag_model_init;
        flag_lnI;
        
        FIT_INFO;
        var_values;
        
        mode_dist;
        mode_form;
        mode_stru;
        mode_sld;
        mode_alpha;
        model_number;
        
        % set = setting
        set_par_range_cell;
        set_model_table;
        set_BO_opt_table;
        set_GS_opt_table;
        set_program_par_table;
        
        % 
        fit_total_progress;
        fit_current_progress;
        
        % 
        main_path;
        file_name;
        file_path;
        function_mode;
        result_table;
        
        % Guinier
        guinier_raw_data
        guinier_raw_data_offporod
        guinier_q_mode
        guinier_line_left
        guinier_line_right
        guinier_text_left
        guinier_text_right
        guinier_fitting_line
        guinier_state_open_left
        guinier_state_open_right
        guinier_para_C
        guinier_para_Ibg_porod
        guinier_para_alpha
        guinier_para_qmin
        guinier_para_qmax
        guinier_con1
        guinier_para_Rg
        guinier_para_Rsp
        guinier_result
        
        % UI wd = widget
        wd_main_window;
        wd_res_fig;
        wd_popmenu_mode;
        wd_datafile_annotation;
        wd_guinier_slideralpha;
        wd_guinier_editTestalpha;
        wd_guinier_sliderqmin;
        wd_guinier_editTestqmin;
        wd_guinier_sliderqmax;
        wd_guinier_editTestqmax;
        wd_guinier_C_result
        wd_guinier_Ibg_result
        wd_guinier_corrcoef_Porod_result
        wd_guinier_Rg_result
        wd_guinier_Rsp_result
        wd_guinier_corrcoef_Guinier_result
        wd_guinier_outputButton

        wd_lnI_button;
        wd_parameters_panel;
        wd_start_button;
        wd_stop_button;
        wd_output_button;
        wd_set_figure;
        wd_waitbar;
        
        % ������ر��� dt = data
        dt_E_data_raw;
        dt_E_data;
        dt_q_min
        dt_q_max;
        dt_E_max;
        dt_E_min;
        dt_input_I_log;
        dt_input_dI_log;
        q_unit;
        
        % UI�����س���
        FONT_NAME;
        LABEL_FONT_SIZE;
        MENU_FONT_SIZE;
        ANNOTATION_FONT_SIZE;
        COORDINATE_FONT_SIZE;
        PANEL_FONT_SIZE;
        CREATE_STRUCT;
    end
    
    methods
        
        % Initialization function
        function item = VSAS_MAIN()
            item.window_width  = 1800;
            item.window_height = 900;
            item = item.getMainPath();
            item = item.initConstants();
            item = item.initFitPar();
            item = item.initFlags();
            item = item.initWindow();
            item = item.initPanel();
            item.FIT_INFO = FIT_INFO();
            item = item.initSet();
        end
        
        obj = clearAll(obj, name);
        [obj, res] = show(obj, name);
        obj = showAll(obj,name);
        obj = getMainPath(obj);
        obj = initWindow(obj);
        obj = disableAll(obj, name);
        obj = enableAll(obj, name);
        obj = init_dist_config_panel(obj, varargin);
        
        % ��ʼ�����г���
        function obj = initConstants(obj)
            obj.FONT_NAME            = 'Times New Roman';
            obj.LABEL_FONT_SIZE      = 12;
            obj.MENU_FONT_SIZE       = 10;
            obj.ANNOTATION_FONT_SIZE = 14;
            obj.COORDINATE_FONT_SIZE = 16;
            obj.PANEL_FONT_SIZE      = 14;
            obj.result_table         = table();
            obj.CREATE_STRUCT.Interpreter = 'tex';
            obj.CREATE_STRUCT.WindowStyle = 'modal';
        end
        
        % ��ʼ������Flag����
        function obj = initFlags(obj)
            obj.flag_dis_fit_init = 0;
            obj.flag_load_data    = 0;
            obj.flag_fit_slider_init = 0;
            obj.flag_fit          = 0;
            obj.flag_guinier_init = 0;
        end
        
        % ��ʼ��ģ�����ѡ��
        function obj = initFitPar(obj)
            obj.mode_dist  = '1';
            obj.mode_form  = '1';
            obj.mode_stru  = '1';
            obj.mode_sld   = '1';
            obj.mode_alpha = '1';
            
        end
        
        % ��ʼ�����������ز���
        function obj = initSet(obj)
            obj.set_par_range_cell    = table2cell(obj.FIT_INFO.var_range_table);
            obj.set_model_table       = obj.FIT_INFO.model_table;
            obj.set_BO_opt_table      = obj.FIT_INFO.BO_opt_table;
            obj.set_GS_opt_table      = obj.FIT_INFO.GS_opt_table;
            obj.set_program_par_table = obj.FIT_INFO.program_par_table;
        end
        
        % ��ʼ���������
        function obj = initPanel(obj)
            % 1. �����ѿ�������
            obj.wd_res_fig = axes('Parent', obj.wd_main_window, ...
                                  'Position', [.25 .18 .36 .75], ...
                                  'Box', 'on', ...
                                  'Tag', 'always', ...
                                  'XGrid', 'on', ...
                                  'YGrid', 'on');

            % 2. ����"Select_mode"��������ť
            uicontrol(obj.wd_main_window, ...
                      'Style', 'text', ...
                      'HorizontalAlignment', 'left', ...
                      'String', 'Select mode', ...
                      'Fontname', obj.FONT_NAME, ...
                      'FontSize', obj.LABEL_FONT_SIZE, ...
                      'Position', [20 obj.window_height-40 100 30]);
            obj.wd_popmenu_mode = uicontrol(obj.wd_main_window, ...
                     'Style', 'popupmenu', ...
                     'Handlevisibility', 'On', ...
                     'Position', [120 obj.window_height-40 160 30], ...
                     'String', ['Choose|' ...
                                'Guinier approach|' ...
                                'Distribution fitting mode'], ...
                     'Fontname', obj.FONT_NAME, ...
                     'FontSize', obj.MENU_FONT_SIZE, ...
                     'Tag', 'popmenu_mode', ...
                     'Callback', @programmeModeSwitch);

            % 3. ����"Load data file"�ı�����ť
            uicontrol(obj.wd_main_window, ...
                      'Style', 'text', ...
                      'HorizontalAlignment', 'left', ...
                      'String', 'Load data file', ...
                      'Fontname', obj.FONT_NAME, ...
                      'FontSize', obj.LABEL_FONT_SIZE, ...
                      'Position', [20 obj.window_height-65 100 20], ...
                      'Tag', 'm_choose_text', ...
                      'Visible', 'off');
            uicontrol(obj.wd_main_window, ...
                      'Style', 'pushbutton', ...
                      'Tag', 'm_load_button', ...
                      'String', 'Load', ...
                      'Fontname', obj.FONT_NAME, ...
                      'FontSize', obj.LABEL_FONT_SIZE, ...
                      'Position', [120 obj.window_height-65 50 25], ...
                      'Callback', @loadButtonCallback, ...
                      'Visible', 'off');
            obj.wd_datafile_annotation = annotation(obj.wd_main_window, 'textbox', ...
                    'Tag', 'datafile_annotation', ...
                    'Units', 'pixel', ... 
                    'Position', [430 obj.window_height-40 500 25], ...
                    'String', '', ...
                    'interpreter', 'latex', ...
                    'EdgeColor', [0.941, 0.941, 0.941], ...
                    'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                    'Color', 'b', ...
                    'Visible', 'off');
        end
        
        function obj = resetResFig(obj)
            cla(obj.wd_res_fig);
            set(obj.wd_res_fig, 'XGrid', 'on');
            set(obj.wd_res_fig, 'YGrid', 'on');
%             grid on;
%             obj.wd_res_fig.XLim = [0 obj.dt_q_max+0.1];
%             obj.wd_res_fig.YLim = [obj.dt_E_min-1 obj.dt_E_max+1];
        end
        
        % ���ݶ�ȡ����
        function obj = loadData(obj, data)
            obj.dt_E_data_raw = data;
            min_I = min(data(:, 2));
            if min_I < 0
                obj.flag_lnI = 0;
                set(obj.wd_lnI_button, "value", 0)
            else
                obj.flag_lnI = 1;
                set(obj.wd_lnI_button, "value", 1)
            end
            obj.flag_load_data = 1;
            obj = obj.rawDataParse();
        end
        
        function obj = rawDataParse(obj)
            data_size = size(obj.dt_E_data_raw);
            obj.dt_E_data = obj.dt_E_data_raw;
            obj.I = 
            if obj.flag_lnI == 1
                obj.dt_E_data(:,2) = log(obj.dt_E_data_raw(:,2)); % ln ����
                if data_size(2) >= 3
                    obj.dt_E_data(:,3) = (1/obj.dt_E_data_raw(:,2)*obj.dt_E_data_raw(:,3));
                end
            end
            if obj.q_unit == 2
                obj.dt_E_data(:,1) = obj.dt_E_data(:,1) * 10;
            end
            obj.dt_q_max = max(obj.dt_E_data(:, 1));
            obj.dt_q_min = min(obj.dt_E_data(:, 1));
            obj.dt_E_max = max(obj.dt_E_data(:, 2));
            obj.dt_E_min = min(obj.dt_E_data(:, 2));
            obj.FIT_INFO = obj.FIT_INFO.loadData(obj.dt_E_data);
            obj = obj.initSet();
            obj = modelRefresh(obj);
        end
        
        % ��ʾ��ȡ����·��������
        function showDataFileName(obj)
            set(obj.wd_datafile_annotation, 'String', obj.file_name);
            set(obj.wd_datafile_annotation, 'Visible', 'on');
        end
        
        % ��ʼ���ֲ����ģʽ���
        function obj = initDisFitPanel(obj)
            if obj.flag_dis_fit_init == 1
                return
            end
            % 1. Help button
            uicontrol(obj.wd_main_window, ...
                  'style', 'pushbutton', ...
                  'String', 'Help', ...
                  'Fontname', obj.FONT_NAME, ...
                  'FontSize', obj.LABEL_FONT_SIZE, ...
                  'position', [175 obj.window_height-65 50 25], ...
                  'Callback', @Question_Button, ...
                  'Tag', 'm_button_help_distr_fit', ...
                  'Visible', 'off');
            
            obj.wd_lnI_button = uicontrol(obj.wd_main_window, ...
                  'style', 'radiobutton', ...
                  'String', 'ln(I)', ...
                  'Fontname', obj.FONT_NAME, ...
                  'FontSize', obj.LABEL_FONT_SIZE, ...
                  'position', [232 obj.window_height-65 60 25], ...
                  'Callback', @lnIButtonCallback, ...
                  'Tag', 'm_button_lnI_distr_fit', ...
                  'Visible', 'off');
            
            uicontrol(obj.wd_main_window, ...
                  'Style', 'text', ...
                  'HorizontalAlignment', 'left', ...
                  'String', 'q unit:', ...
                  'Fontname', obj.FONT_NAME, ...
                  'FontSize', obj.LABEL_FONT_SIZE, ...
                  'Position', [280 obj.window_height-65 50 20], ...
                  'Tag', 'm_q_unit_text', ...
                  'Visible', 'off');
              
            uicontrol(obj.wd_main_window, ...
                  'style', 'popupmenu', ...
                  'String', ['nm-1|' 'A-1'], ...
                  'Fontname', obj.FONT_NAME, ...
                  'FontSize', obj.LABEL_FONT_SIZE, ...
                  'position', [320 obj.window_height-65 60 25], ...
                  'Callback', @qUnitPopmenuCallback, ...
                  'Tag', 'm_popupmenu_q_unit_distr_fit', ...
                  'Visible', 'off');

            % ѭ������ Distribution fitting mode ģ���������
            dis_fit_mode_panels_title = {'Distribution', ...
                 'Form Factor', ...
                 'Structure Factor', ...
                 'SLD Input', ...
                 'Alpha Fit'};
            dis_fit_mode_panels_title_tag = {'m_panel_model', ...
                 'm_panel_factor', ...
                 'm_panel_structure', ...
                 'm_panel_sld', ...
                 'm_panel_alpha'};
            dis_fit_mode_panels_label = {'H(R)', ...
                 'F(q)', ...
                 'S(q)', ...
                 'SLD', ...
                 'alpha'};
            dis_fit_mode_panels_label_tag = {'m_label_hr', ...
                 'm_label_fq', ...
                 'm_label_sq', ...
                 'm_label_sld', ...
                 'm_label_alpha'};
            dis_fit_mode_panels_menu = {'Choose|Monodistribution|One Gaussian distribution|Two Weighted Gaussian distribution', ...
                 'Choose|Hard sphere|Hard ellipsoid|Sphere with core-shell', ...
                 'Choose|Dilute system S(q)= 1', ...
                 'Choose|Yes|No', ...
                 'Choose|Yes|No'};
            Dis_fit_mode_panels_menu_callback = {@modeChangeDist, ...
                 @modeChangeForm, ...
                 @modeChangeStru, ...
                 @modeChangeSLD, ...
                 @modeChangeAlpha};
            Dis_fit_mode_panels_menu_tag = {'m_menu_hr', ...
                 'm_menu_fq', ...
                 'm_menu_sq', ...
                 'm_menu_sld', ...
                 'm_menu_alpha'};

            for n_panel = 1:size(dis_fit_mode_panels_title,2)
                height = obj.window_height-65-70 * n_panel;
                panel = uipanel(obj.wd_main_window, ...
                    'Units', 'pixel', ...
                    'Position', [50 height 330 65], ...
                    'Title', dis_fit_mode_panels_title{n_panel}, ...
                    'Fontname', obj.FONT_NAME, ...
                    'FontSize', obj.PANEL_FONT_SIZE, ...
                    'Tag', dis_fit_mode_panels_title_tag{n_panel}, ...
                    'Visible', 'off');
                uicontrol('Parent', panel, ...
                      'Style', 'text', ...
                      'HorizontalAlignment', 'left', ...
                      'String', dis_fit_mode_panels_label{n_panel}, ...
                      'Fontname', obj.FONT_NAME, ...
                      'FontSize', obj.LABEL_FONT_SIZE, ...
                      'Position', [15 3 50 30], ...
                      'FontAngle', 'italic', ...
                      'Tag',dis_fit_mode_panels_label_tag{n_panel}, ...
                      'Visible', 'off');
                uicontrol('Parent', panel, ...
                      'Style', 'popupmenu', ...
                      'Handlevisibility', 'On', ...
                      'Position', [60 5 200 30], ...
                      'String', dis_fit_mode_panels_menu{n_panel}, ...
                      'Fontname', obj.FONT_NAME, ...
                      'FontSize', obj.MENU_FONT_SIZE, ...
                      'Callback', Dis_fit_mode_panels_menu_callback{n_panel}, ...
                      'Tag', Dis_fit_mode_panels_menu_tag{n_panel}, ...
                      'Visible', 'off');
            end
            obj.flag_dis_fit_init = 1;
            obj = obj.init_dist_config_panel('x_pos', 1125);
        end

        % ��ʾDisFitPanel���
        function obj = showDisFitPanel(obj)

            %��ʾ"Help��Start��Output"��ť
            obj.show('m_button_help_distr_fit');
            obj.show('m_button_lnI_distr_fit');
            obj.show('m_q_unit_text');
            obj.show('m_popupmenu_q_unit_distr_fit');
            
            obj.show('m_panel_model');
            obj.show('m_label_hr');
            obj.show('m_menu_hr');

            obj.show('m_panel_factor');
            obj.show('m_label_fq');
            obj.show('m_menu_fq');

            obj.show('m_panel_structure');
            obj.show('m_label_sq');
            obj.show('m_menu_sq');
            
            obj.show('m_panel_sld');
            obj.show('m_label_sld');
            obj.show('m_menu_sld');
            
            obj.show('m_panel_alpha');
            obj.show('m_label_alpha');
            obj.show('m_menu_alpha');
            
            obj.showAll('set_');
        end
        
        function obj = initGuinierPanel(obj)
            if obj.flag_guinier_init == 1
                return
            end
            % 1. ����"Porod fitting"��壬��ʽ��"Start"��"Help"��ť
            fit_C_value_panel = uipanel(obj.wd_main_window, ...
                       'Units', 'pixel', ...
                       'Position', [50 obj.window_height-175 300 105], ...
                       'Title', 'Porod fitting', ...
                       'Fontname', obj.FONT_NAME, ...
                       'FontSize', obj.PANEL_FONT_SIZE, ...
                       'Tag', 'm_panel_fit_C', ...
                       'Visible', 'off');
            annotation(fit_C_value_panel, 'textbox', ...
                       'Units', 'pixel', ...
                       'Position', [20 50 250 25], ...
                       'String', '$I_{porod}=\frac{C}{q^\alpha}+I_{Laue}$', ...
                       'interpreter', 'latex', ...
                       'EdgeColor', [0.941, 0.941, 0.941], ...
                       'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                       'Tag', 'm_label_porod_fitting', ...
                       'FitBoxToText', 'on', ...
                       'Visible', 'off');
            % "Porod fitting" "Start" ��ť
            uicontrol(fit_C_value_panel, ...
                      'Style', 'pushbutton', ...
                      'Position', [25 10 50 25], ...
                      'String', 'Start', ...
                      'FontName', obj.FONT_NAME, ...
                      'FontSize', obj.LABEL_FONT_SIZE, ...
                      'Callback', @GuinierPorodStartButtonCallback, ...
                      'Tag', 'm_button_fit_C', ...
                      'Enable', 'on', ...
                      'Visible', 'off');
            uicontrol(fit_C_value_panel, ... 
                      'Style', 'pushbutton', ...
                      'Position', [95 10 50 25], ...
                      'String', 'Help', ...
                      'FontName', obj.FONT_NAME, ...
                      'FontSize', obj.LABEL_FONT_SIZE, ...
                      'Callback', @GuinierPorodFitHelpCallback, ...
                      'Tag', 'm_button_help_fit_C', ...
                      'Visible', 'off');
            % 2. ����"Guinier fitting"��壬��ʽ��"Remove Porod Intensity"����ѡ��ť��"Start"��"Help"��ť
            fit_Rg_panel = uipanel(obj.wd_main_window, ...
                   'Units', 'pixel', ...
                   'Position', [50 obj.window_height-320 300 140], ...
                   'Title', 'Guinier fitting', ...
                   'Fontname', obj.FONT_NAME, ...
                   'FontSize', obj.PANEL_FONT_SIZE, ...
                   'Tag', 'm_panel_fit_Rg', ...
                   'Visible', 'off');
            annotation(fit_Rg_panel, 'textbox', ...
                   'Units', 'pixel', ...
                   'Position', [20 85 250 30], ...
                   'String', '$I(q)\propto\exp(-\frac{R_g^2q^2}{3})$', ...
                   'interpreter', 'latex', ...
                   'EdgeColor', [0.941, 0.941, 0.941], ...
                   'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                   'Tag', 'm_label_guinier_fitting', ...
                   'FitBoxToText', 'on', ...
                   'Visible', 'off');
            uicontrol(fit_Rg_panel, ...
                  'Style', 'text', ...
                  'HorizontalAlignment', 'left', ...
                  'String', 'Remove Porod Intensity', ...
                  'Fontname', obj.FONT_NAME, ...
                  'FontSize', obj.LABEL_FONT_SIZE, ...
                  'Position', [20 50 200 20], ...
                  'Tag', 'm_text_remove_Poro', ...
                  'Visible', 'off');
            uicontrol(fit_Rg_panel, ...
                  'Style', 'radiobutton', ...
                  'Position', [210 50 40 25], ...
                  'Value', 0, ...
                  'Callback', @modifyPorodQu, ...
                  'Tag', 'm_radio_remove_Poro', ...
                  'Visible', 'off');
            uicontrol(fit_Rg_panel, ...
                  'Style', 'pushbutton', ...
                  'Position', [25 10 50 25], ...
                  'String', 'Start', ...
                  'FontName', obj.FONT_NAME, ...
                  'FontSize', obj.LABEL_FONT_SIZE, ...
                  'Callback', @GuinierGuinierFitStartButtonCallback, ...
                  'Tag', 'm_button_fit_Rg', ...
                  'Visible', 'off');
            uicontrol(fit_Rg_panel, ...
                  'Style', 'pushbutton', ...
                  'Position', [95 10 50 25], ...
                  'String', 'Help', ...
                  'FontName', obj.FONT_NAME, ...
                  'FontSize', obj.LABEL_FONT_SIZE, ...
                  'Callback', @GuinierGuinierFitHelpCallback, ...
                  'Tag', 'm_button_help_fit_Rg', ...
                  'Visible', 'off');
            % 3. ����"Parameters"��壬"����q_min��q_max"�����������༭��
            parameters_panel = uipanel(obj.wd_main_window, ...
                'Units', 'pixel', ...
                'Position', [50 obj.window_height-475 300 150], ...
                'Title', 'Parameters', ...
                'FontName', obj.FONT_NAME, ...
                'FontSize', obj.PANEL_FONT_SIZE, ...
                'Tag', 'm_panel_par', ...
                'Visible', 'off');
            annotation(parameters_panel, 'textbox', ...
                'Units', 'pixel', ...
                'Position', [15, 105, 50, 20], ...
                'String', '$\alpha$', ...
                'interpreter', 'latex', ...
                'EdgeColor', [0.941, 0.941, 0.941], ...
                'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                'Tag', 'm_label_aplha', ...
                'FitBoxToText', 'on', ...
                'Visible', 'off');
            obj.wd_guinier_slideralpha = uicontrol(parameters_panel, ...
                'Style', 'slider', ...
                'Min', 0, 'Max', 6.5, ...
                'Value', 5, ...
                'Position', [70 100 150 20], ...
                'Callback', @GuinierSliderAlphaCallback, ... 
                'Tag', 'm_slider_alpha', ...
                'Visible', 'off');
            obj.wd_guinier_editTestalpha = uicontrol(parameters_panel, ...
                'Style', 'edit', ...
                'String', '0', ...
                'Position', [235  100 50 20], ...
                'Callback', @GuinierTextAlphaCallback, ...
                'Tag', 'm_edit_alpha', ...
                'Visible', 'off');
            annotation(parameters_panel, 'textbox', ...
                'Units', 'pixel', ... 
                'Position', [15, 67, 50, 20], ...
                'String', '$q_{min}$', ...
                'interpreter', 'latex', ...
                'EdgeColor', [0.941, 0.941, 0.941], ...
                'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                'Tag', 'm_label_qmin', ...
                'FitBoxToText', 'on', ...
                'Visible', 'off');
            obj.wd_guinier_sliderqmin = uicontrol(parameters_panel, ...
                'Style', 'slider', ...
                'Min', 0, ...
                'Max', 100, ...
                'Value', 0, ...
                'Position', [70 60 150 20], ...
                'Callback', @GuinierSliderQMinCallback, ...
                'Tag', 'm_slider_qmin', ...
                'Visible', 'off');
            obj.wd_guinier_editTestqmin = uicontrol(parameters_panel, ...
                'Style', 'edit', ...
                'String', '0', ...
                'Position', [235  60 50 20], ...
                'Callback', @GuinierTextQMinCallback, ...
                'Tag', 'm_edit_qmin', ...
                'Visible', 'off');
            annotation(parameters_panel, 'textbox', ...
                'Units', 'pixel', ...
                'Position', [15, 27, 50, 20], ...
                'String', '$q_{max}$', ...
                'interpreter', 'latex', ...
                'EdgeColor', [0.941, 0.941, 0.941], ...
                'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                'Tag', 'm_label_qmax', ...
                'FitBoxToText', 'on', ...
                'Visible', 'off');
            obj.wd_guinier_sliderqmax = uicontrol(parameters_panel, ...
                'Style', 'slider', ...
                'Min', 0, ...
                'Max', 100, ...
                'Value', 0, ...
                'Position', [70 20 150 20], ...
                'Callback', @GuinierSliderQMaxCallback, ...
                'Tag', 'm_slider_qmax', ...
                'Visible', 'off');
            obj.wd_guinier_editTestqmax = uicontrol(parameters_panel, ...
                'Style', 'edit', ...
                'String', '0', ...
                'Position', [235  20 50 20], ...
                'Callback', @GuinierTextQMaxCallback, ...
                'Tag', 'm_edit_qmax', ...
                'Visible', 'off');
            % 4. ����"Fit Results"��壬"C��R_g��r��Rg_sp��I_bg"
            result_panel = uipanel(obj.wd_main_window, ...
                'Units', 'pixel', ...
                'Position', [50 obj.window_height-610 300 130], ...
                'Title', 'Fit Results', ...
                'FontName', obj.FONT_NAME, ...
                'FontSize', obj.PANEL_FONT_SIZE, ...
                'Tag', 'm_panel_result', ...
                'Visible', 'off');
            annotation(result_panel, 'textbox', ...
                'Units', 'pixel', ...
                'Position', [20, 85, 50, 20], ...
                'String', '$C\,=$', ...
                'interpreter', 'latex', ...
                'EdgeColor', [0.941, 0.941, 0.941], ...
                'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                'Tag', 'm_label_result_C', ...
                'FitBoxToText', 'on', ...
                'Visible', 'off');
            obj.wd_guinier_C_result = annotation(result_panel, 'textbox', ...
                'Units', 'pixel', ...
                'Position', [65, 85, 50, 20], ...
                'String', '0', ...
                'interpreter', 'latex', ...
                'EdgeColor', [0.941, 0.941, 0.941], ...
                'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                'Tag', 'm_result_C', ...
                'FitBoxToText', 'on', ...
                'Visible', 'off');
            annotation(result_panel, 'textbox', ...
                'Units', 'pixel', ...
                'Position', [20, 60, 50, 20], ...
                'String', '$I_{Laue}\,=$', ...
                'interpreter', 'latex', ...
                'EdgeColor', [0.941, 0.941, 0.941], ...
                'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                'Tag', 'm_label_result_laue', ...
                'FitBoxToText', 'on', ...
                'Visible', 'off');
            obj.wd_guinier_Ibg_result = annotation(result_panel, 'textbox', ...
                'Units', 'pixel', ...
                'Position', [95, 60, 50, 20], ...
                'String', '0', ... 
                'interpreter', 'latex', ...
                'EdgeColor', [0.941, 0.941, 0.941], ...
                'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                'Tag', 'm_result_laue', ...
                'FitBoxToText', 'on', ...
                'Visible', 'off');
            annotation(result_panel, 'textbox', ...
                'Units', 'pixel', ...
                'Position', [170, 85, 50, 20], ...
                'String', '$r_{p}\,=$', ...
                'interpreter', 'latex', ...
                'EdgeColor', [0.941, 0.941, 0.941], ...
                'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                'Tag', 'm_label_corrcoef_Porod', ...
                'FitBoxToText', 'on', ...
                'Visible', 'off');
            obj.wd_guinier_corrcoef_Porod_result = annotation(result_panel, 'textbox', ...
                'Units', 'pixel', ...
                'Position', [215, 85, 50, 20], ...
                'String', '0', ...
                'interpreter', 'latex', ...
                'EdgeColor', [0.941, 0.941, 0.941], ...
                'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                'Tag', 'm_result_corrcoef_Porod', ...
                'FitBoxToText', 'on', ...
                'Visible', 'off');
            annotation(result_panel, 'textbox', ...
                'Units', 'pixel', ... 
                'Position', [20, 35, 50, 20], ...
                'String', '$Rg\,=$', ...
                'interpreter', 'latex', ...
                'EdgeColor', [0.941, 0.941, 0.941], ...
                'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                'Tag', 'm_label_result_Rg', ...
                'FitBoxToText', 'on', ...
                'Visible', 'off');
            obj.wd_guinier_Rg_result = annotation(result_panel, 'textbox', ...
                'Units', 'pixel', ...
                'Position', [70, 35, 50, 20], ...
                'String', '0', ...
                'interpreter', 'latex', ...
                'EdgeColor', [0.941, 0.941, 0.941], ...
                'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                'Tag', 'm_result_Rg', ...
                'FitBoxToText', 'on', ...
                'Visible', 'off');
            annotation(result_panel, 'textbox', ...
                'Units', 'pixel', ...
                'Position', [20, 10, 50, 20], ...
                'String', '$R(sp)\,=$', ...
                'interpreter', 'latex', ...
                'EdgeColor', [0.941, 0.941, 0.941], ...
                'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                'Tag', 'm_label_result_Rsp', ...
                'FitBoxToText', 'on', ...
                'Visible', 'off');
            obj.wd_guinier_Rsp_result = annotation(result_panel, 'textbox', ...
                'Units', 'pixel', ...
                'Position', [95, 10, 50, 20], ...
                'String', '0', ...
                'interpreter', 'latex', ... 
                'EdgeColor', [0.941, 0.941, 0.941], ...
                'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                'Tag', 'm_result_Rgsp', ...
                'FitBoxToText', 'on', ...
                'Visible', 'off');
            annotation(result_panel, 'textbox', ...
                'Units', 'pixel', ...
                'Position', [170, 35, 50, 20], ...
                'String', '$r_{g}\,=$', ...
                'interpreter', 'latex', ...
                'EdgeColor', [0.941, 0.941, 0.941], ...
                'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                'Tag', 'm_label_corrcoef_Guinier', ...
                'FitBoxToText', 'on', ...
                'Visible', 'off');
            obj.wd_guinier_corrcoef_Guinier_result = annotation(result_panel, 'textbox', ...
                'Units', 'pixel', ...
                'Position', [215, 35, 50, 20], ...
                'String', '0', ...
                'interpreter', 'latex', ...
                'EdgeColor', [0.941, 0.941, 0.941], ... 
                'FontSize', obj.ANNOTATION_FONT_SIZE, ...
                'Tag', 'm_result_corrcoef_Guinier', ...
                'FitBoxToText', 'on', ...
                'Visible', 'off');
            % 5. ����"Output"��ť
            obj.wd_guinier_outputButton = uicontrol(obj.wd_main_window, ...
                'Style', 'Pushbutton', ...
                'String', 'Output', ...
                'Fontname', obj.FONT_NAME, ...
                'FontSize', obj.LABEL_FONT_SIZE, ...
                'position', [1000 40 80 35], ...
                'Callback', @GuinierOutputButtonCallback, ...
                'Tag', 'm_button_output1', ... 
                'Visible', 'off');
            obj.flag_guinier_init = 1;
        end
        
        function obj = showGuinierPanel(obj)
            xlabel(obj.wd_res_fig, '$q^2$', 'Fontsize', obj.COORDINATE_FONT_SIZE, 'Interpreter', 'latex');
            ylabel(obj.wd_res_fig, '$\ln(I(q))$', 'Fontsize', obj.COORDINATE_FONT_SIZE, 'Interpreter', 'latex');
            obj.guinier_raw_data = plot(obj.wd_res_fig, obj.dt_E_data(:, 1).^2, obj.dt_E_data(:, 2), '*', 'Color', 'b');
            axis([0-5 max(obj.dt_E_data(:, 1).^2)+5 min(obj.dt_E_data(:, 2))-0.2 max(obj.dt_E_data(:, 2))+0.2])
            hold on;
            obj.guinier_raw_data_offporod = plot(obj.wd_res_fig, obj.dt_E_data(:, 1).^2,obj.dt_E_data(:, 2), '-.', 'Color', [.58 .58 .58], 'Visible', 'off', 'LineWidth', 1.3);
            nbPoint = size(obj.dt_E_data, 1);
            NumData0 = round(obj.dt_E_data(nbPoint), 2);

            %��ʾ"Porod fitting"���
            obj.show('m_panel_fit_C');
            obj.show('m_label_porod_fitting');
            obj.show('m_button_fit_C');
            obj.show('m_button_help_fit_C');
            %��ʾ"Guinier fitting"���
            obj.show('m_panel_fit_Rg');
            obj.show('m_label_guinier_fitting');
            obj.show('m_text_remove_Poro');
            obj.show('m_radio_remove_Poro');
            obj.show('m_button_fit_Rg');
            obj.show('m_button_help_fit_Rg');
            %��ʾ"Parameters"���
            obj.show('m_panel_par');
            obj.show('m_label_qmin');
            obj.show('m_label_qmax');
            obj.show('m_label_aplha');
            obj.show('m_slider_qmin');
            obj.show('m_slider_qmax');
            obj.show('m_slider_alpha');
            obj.show('m_edit_qmin');
            obj.show('m_edit_qmax');
            obj.show('m_edit_alpha');
            
            set(obj.wd_guinier_outputButton, 'Enable', 'Off');
            set(obj.wd_guinier_sliderqmin, 'Min', 0, 'Max',NumData0, 'Value', 0);
            set(obj.wd_guinier_editTestqmin, 'String', '0');
            set(obj.wd_guinier_sliderqmax, 'Min', 0, 'Max',NumData0, 'Value', 0);
            set(obj.wd_guinier_editTestqmax, 'String', '0');
            set(obj.wd_guinier_slideralpha, 'Min', 0, 'Max', 6.5, 'Value', 0);
            set(obj.wd_guinier_editTestalpha, 'String', '0');
            %��ʾ"Fit Results"����"Output"��ť
            obj.show('m_panel_result');
            obj.show('m_button_output1');

            obj.guinier_line_left = line(obj.wd_res_fig, [0, 0], [min(obj.dt_E_data(:, 2)), max(obj.dt_E_data(:, 2))], 'Color', 'r', 'ButtonDownFcn', @bdfcn_left, 'Visible', 'off');
            obj.guinier_line_right = line(obj.wd_res_fig, [0, 0], [min(obj.dt_E_data(:, 2)), max(obj.dt_E_data(:, 2))], 'Color', 'r', 'ButtonDownFcn',  @bdfcn_right, 'Visible', 'off');
            obj.guinier_text_left = text('String', '$\gets{q_{min}} $', 'interpreter', 'latex', 'Fontname', obj.FONT_NAME, 'FontSize', obj.LABEL_FONT_SIZE, 'Visible', 'off');
            obj.guinier_text_right = text('String', '$\gets{q_{max}} $', 'interpreter', 'latex', 'Fontname', obj.FONT_NAME, 'FontSize', obj.LABEL_FONT_SIZE, 'Visible', 'off');
            obj.guinier_fitting_line = plot(obj.wd_res_fig, 0:0, 0:0);
            obj.guinier_state_open_left = 0;
            obj.guinier_state_open_right = 0;
            obj.guinier_q_mode = 1; % mode Guinier
        end
        
        % ����ʵ������ɢ��ͼ
        function plotExpDataPoint(obj)
%             plot(obj.wd_res_fig, obj.dt_E_data(:, 1), obj.dt_E_data(:, 2), '.', 'Color', 'b');
            errorbar(obj.wd_res_fig, ...
                log(obj.dt_E_data(:, 1)), ...
                obj.dt_E_data(:, 2), ...
                obj.dt_E_data(:, 3), ...
                '--.', ...
                'CapSize', 2, ...
                'Color', '#BEBEBE', ...
                'MarkerEdgeColor','blue',...
                'MarkerFaceColor','blue');
%             set(obj.wd_res_fig, 'XLim', [0 obj.dt_q_max+0.1]);
            set(obj.wd_res_fig, 'XLim', [log(obj.dt_q_min)-0.1 log(obj.dt_q_max)+0.1]);
            set(obj.wd_res_fig, 'YLim', [obj.dt_E_min-1 obj.dt_E_max+1]);
            set(obj.wd_res_fig, 'XGrid', 'on');
            set(obj.wd_res_fig, 'YGrid', 'on');
            xlabel(obj.wd_res_fig, '$q(nm^{-1})$', ...
                'Fontsize', obj.COORDINATE_FONT_SIZE, ...
                'Interpreter', 'latex');              
            ylabel(obj.wd_res_fig, '$\ln(I(q))$', ...
                'Fontsize', obj.COORDINATE_FONT_SIZE, ...
                'Interpreter', 'latex');
            hold on;
        end
        
        % ��������ģ����ز���
        function obj = modelRefresh(obj)
            obj = obj.checkModelInit();
            if obj.flag_model_init == 0
                obj.flag_fit_slider_init = 0;
                return
            end
            
            if obj.flag_load_data == 0
                obj.flag_fit_slider_init = 0;
                myMessageBox('Please load data!')
                return
            end
            
            if obj.mode_form == '3'
                myMessageBox('Available in future version!');
                return
            end
            
%             if obj.mode_form == '4' && obj.mode_sld == '3'
%                 myMessageBox('Available in future version!');
%                 return
%             end
            
            obj = obj.buildVarINFO();
            obj = obj.initVarSliders();
            obj = obj.plotFitValue();
        end
        
        % ���ģ�Ͳ����Ƿ��ʼ��
        function obj = checkModelInit(obj)
            if strcmp(obj.mode_dist, '1') || strcmp(obj.mode_form, '1') || strcmp(obj.mode_stru, '1') || strcmp(obj.mode_sld, '1') || strcmp(obj.mode_alpha, '1')
                obj.flag_model_init = 0;
                return
            end
            obj.flag_model_init = 1;
        end
        
        % ��ʼ�� FIT_INFO ����
        % ���������صĲ��������ݶ������� FIT_INFO ������
        % �������������UI���������ģ����Žӿ�
        % UI�����û���ѡ��д�� FIT_INFO ������
        % ����ϳ������ FIT_INFO ��������ȡ�������Ҫ�Ĳ���
        function obj = buildVarINFO(obj)
            obj.FIT_INFO = obj.FIT_INFO.buildVarInfo(...
                 obj.dt_E_data, ...
                 obj.mode_dist, ...
                 obj.mode_form, ...
                 obj.mode_stru, ...
                 obj.mode_sld, ...
                 obj.mode_alpha);
        end
        
        % 
        function obj = initVarSliders(obj)
            
            if obj.FIT_INFO.flag == 0
                return
            end
            
            obj.clearAll('m_panel_par2');
            obj.flag_fit_slider_init = 1;
            
            VarNames   = obj.FIT_INFO.var_names;
            VarRanges  = obj.FIT_INFO.var_range;
            VarSymbols = obj.FIT_INFO.var_symbols;
            obj.var_values = (obj.FIT_INFO.INFO.ParRangeArray{1}(1,:) + obj.FIT_INFO.INFO.ParRangeArray{1}(2,:)) ./ 2;
%             obj.var_values = obj.FIT_INFO.INFO.ParRangeArray{1}(1,:);

            obj.wd_parameters_panel = uipanel(obj.wd_main_window, ... 
                      'Units', 'pixel', ...
                      'Position', [50 65 330 obj.window_height-485], ...
                      'Title', 'Parameters', ... 
                      'Fontname', obj.FONT_NAME, ...
                      'FontSize', obj.PANEL_FONT_SIZE, ...
                      'Tag', 'm_panel_par2', ...
                      'Visible', 'on');
            % obj.show('m_panel_result2');
            pos_y = 370;
            for k = 1:obj.FIT_INFO.INFO.ParNum
                Create_Para_Slider_Text(obj.wd_parameters_panel, ...
                    [10, pos_y, 50, 20], ...
                    VarNames{k}, ...
                    VarRanges{k}(1), VarRanges{k}(2), ...
                    obj.var_values(k), ...
                    VarSymbols{k}, ...
                    ['m_panel_par2_label_', VarNames{k}], ...
                    ['m_panel_par2_slider_', VarNames{k}], ...
                    ['m_panel_par2_edit_', VarNames{k}]);
                pos_y = pos_y - 30;
            end
            
            obj.wd_start_button = uicontrol(obj.wd_main_window, ...
                    'style', 'pushbutton', ...
                    'String', 'Start Fitting', ...
                    'Fontname', obj.FONT_NAME, ...
                    'FontSize', obj.LABEL_FONT_SIZE, ...
                    'position', [80 25 120 30], ...
                    'Enable', 'on', ...
                    'Callback', @startButtonCallback, ...
                    'Tag', 'm_panel_par2_start', ...
                    'Visible', 'on');
            obj.wd_stop_button = uicontrol(obj.wd_main_window, ...
                    'style', 'pushbutton', ...
                    'String', 'Stop Fitting', ...
                    'Fontname', obj.FONT_NAME, ...
                    'FontSize', obj.LABEL_FONT_SIZE, ...
                    'position', [80 25 120 30], ...
                    'Enable', 'on', ...
                    'Callback', @stopButtonCallback, ...
                    'Tag', 'm_panel_par2_stop', ...
                    'Visible', 'off');
            obj.wd_output_button = uicontrol(obj.wd_main_window, ...
                     'style', 'pushbutton', ...
                     'String', 'Output Result', ...
                     'Fontname', obj.FONT_NAME, ...
                     'FontSize', obj.LABEL_FONT_SIZE, ...
                     'position', [230 25 120 30], ...
                     'Enable', 'off', ...
                     'Callback', @outputButtonCallback, ...
                     'Tag', 'm_panel_par2_output', ...
                     'Visible', 'on');
            uipanel(obj.wd_main_window, ...
                    'Units', 'pixel', ...
                    'Position', [390 20 760 130], ...
                    'Title', 'Fit Results', ...
                    'FontName', obj.FONT_NAME, ...
                    'FontSize', obj.PANEL_FONT_SIZE, ...
                    'Tag', 'm_panel_par2_result', ... 
                    'Visible', 'off');

        end
        
        % ��ȡ���I-q����ֵ
        function res = getFitValue(obj)
            var = array2table(obj.var_values, 'VariableNames', obj.FIT_INFO.var_names);
            I_Principle  = obj.FIT_INFO.I_principle_func;
            % I_Porod      = I_POROD(var, obj.FIT_INFO.INFO);
            I_Background = I_BG(var, obj.FIT_INFO.INFO);
            I_Scattering = I_Principle(var, obj.FIT_INFO.INFO);
            % res          = I_Porod + I_Scattering + I_Background;
            res          = I_Scattering + I_Background;
            res          = log(res);
        end
        
        % �������I-q����
        function obj = plotFitValue(obj)
%             obj.wd_res_fig.cla();
%             obj.wd_res_fig.XGrid = 'on';
%             obj.wd_res_fig.YGrid = 'on';
            obj = obj.resetResFig();
            obj.plotExpDataPoint();
            fit_value = obj.getFitValue();
            plot(obj.wd_res_fig, log(obj.dt_E_data(:, 1)), fit_value, 'r');
            hold on;
        end
        
        % ����ĳһ����ֵ
        function obj = setVarValue(obj, var_value_array)
            obj.var_values = var_value_array;
            obj = obj.plotFitValue();
            var_names = obj.FIT_INFO.var_names;
            for i = 1:obj.FIT_INFO.INFO.ParNum
                value = obj.var_values(i);
                slider_tag = ['m_panel_par2_slider_', var_names{i}];
                text_tag   = ['m_panel_par2_edit_', var_names{i}];
                slider    = findall(obj.wd_main_window, 'Tag', slider_tag);
                text      = findall(obj.wd_main_window, 'Tag', text_tag); 
                set(slider(1), 'Value', value);
                set(text(1), 'String', num2str(value));
            end
        end
        
        % Distribution fitting mode ��ϳ�����������е���β�����������������ݵȹ���
        function obj = fitFinish(obj)
            set(obj.wd_output_button, 'Enable', 'on');
            % set(obj.wd_stop_button, 'Visible', 'off');
            % set(obj.wd_start_button, 'Visible', 'on');
            obj = obj.enableAll();
            set(obj.wd_popmenu_mode, 'Enable', 'on');
            waitbar(1, obj.wd_waitbar,'Fitting finished!');
            delete(obj.wd_waitbar);
        end
            
        % ��ȡ����
        function obj = loadDataToINFO(obj)
            obj.FIT_INFO.loadData(obj.dt_E_data)
        end
        
        % Distribution fitting mode ��ȡ��ϳ����ܽ��ȳ���
        function obj = getTotalProgress(obj)
            obj.fit_total_progress = obj.set_program_par_table.fit_times * 3;
        end
        
        % Distribution fitting mode ��ʼ���ȴ���
        function obj = initWaitbar(obj)
            obj.wd_waitbar = waitbar(0, 'Start program...', ...
                                     'Name','Fitting process', ...
                                     'CreateCancelBtn', @cancelFittingProgram);
            obj = obj.getTotalProgress();
            obj.fit_current_progress = 0;
        end
        
        % Distribution fitting mode
        function obj = fitProceed(obj)
            obj.fit_current_progress = obj.fit_current_progress + 1;
            current_process = obj.fit_current_progress;
            total_process = obj.fit_total_progress;
            waitbar(current_process/total_process, obj.wd_waitbar,'The program is running...');
            drawnow();
        end
        
        % Distribution fitting mode
        function obj = stopFittingProgram(obj)
            if ishandle(obj.wd_waitbar)
                delete(obj.wd_waitbar)
            end
            % set(obj.wd_stop_button, 'Visible', 'off');
            % set(obj.wd_start_button, 'Visible', 'on');
            obj = obj.enableAll();
            set(obj.wd_popmenu_mode, 'Enable', 'on');
            set(obj.wd_output_button, 'Enable', 'off');
            obj.flag_fit = 0;
        end
        
        % Distribution fitting mode ��ʼ�Զ���ϳ���
        function obj = startFittingProgram(obj)
            obj = obj.buildVarINFO();
            obj.flag_fit = 1;
            % set(obj.wd_start_button, 'Visible', 'off');
            % set(obj.wd_stop_button, 'Visible', 'on');
            obj = obj.disableAll();
            set(obj.wd_popmenu_mode, 'Enable', 'off');
            obj = obj.initWaitbar();
            drawnow();
        end
    end
    
end